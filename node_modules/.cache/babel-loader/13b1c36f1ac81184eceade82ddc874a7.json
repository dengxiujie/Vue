{"remainingRequest":"C:\\Users\\ma\\Desktop\\items\\Vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ma\\Desktop\\items\\Vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\ma\\Desktop\\items\\Vue\\src\\mock\\index.js","dependencies":[{"path":"C:\\Users\\ma\\Desktop\\items\\Vue\\src\\mock\\index.js","mtime":1570979317719},{"path":"C:\\Users\\ma\\Desktop\\items\\Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\items\\Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\items\\Vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport Mock from 'mockjs';\nimport { baseUrl } from '@/utils/global';\nimport * as login from \"./modules/login\";\nimport * as user from \"./modules/user\";\nimport * as role from \"./modules/role\";\nimport * as dept from \"./modules/dept\";\nimport * as menu from \"./modules/menu\";\nimport * as dict from \"./modules/dict\";\nimport * as log from \"./modules/log\"; // 1. 开启/关闭[所有模块]拦截, 通过调[openMock参数]设置.\n// 2. 开启/关闭[业务模块]拦截, 通过调用fnCreate方法[isOpen参数]设置.\n// 3. 开启/关闭[业务模块中某个请求]拦截, 通过函数返回对象中的[isOpen属性]设置.\n// let openMock = true\n\nvar openMock = true;\nfnCreate(login, openMock);\nfnCreate(user, openMock);\nfnCreate(role, openMock);\nfnCreate(dept, openMock);\nfnCreate(menu, openMock);\nfnCreate(dict, openMock);\nfnCreate(log, openMock);\n/**\r\n * 创建mock模拟数据\r\n * @param {*} mod 模块\r\n * @param {*} isOpen 是否开启?\r\n */\n\nfunction fnCreate(mod) {\n  var isOpen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isOpen) {\n    for (var key in mod) {\n      (function (res) {\n        if (res.isOpen !== false) {\n          var url = baseUrl;\n\n          if (!url.endsWith(\"/\")) {\n            url = url + \"/\";\n          }\n\n          url = url + res.url;\n          Mock.mock(new RegExp(url), res.type, function (opts) {\n            opts['data'] = opts.body ? JSON.parse(opts.body) : null;\n            delete opts.body;\n            console.log('\\n');\n            console.log('%cmock拦截, 请求: ', 'color:blue', opts);\n            console.log('%cmock拦截, 响应: ', 'color:blue', res.data);\n            return res.data;\n          });\n        }\n      })(mod[key]() || {});\n    }\n  }\n}",{"version":3,"sources":["C:/Users/ma/Desktop/items/Vue/src/mock/index.js"],"names":["Mock","baseUrl","login","user","role","dept","menu","dict","log","openMock","fnCreate","mod","isOpen","key","res","url","endsWith","mock","RegExp","type","opts","body","JSON","parse","console","data"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,KAAKC,KAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,GAAZ,sB,CAEA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,IAAf;AACAC,QAAQ,CAACR,KAAD,EAAQO,QAAR,CAAR;AACAC,QAAQ,CAACP,IAAD,EAAOM,QAAP,CAAR;AACAC,QAAQ,CAACN,IAAD,EAAOK,QAAP,CAAR;AACAC,QAAQ,CAACL,IAAD,EAAOI,QAAP,CAAR;AACAC,QAAQ,CAACJ,IAAD,EAAOG,QAAP,CAAR;AACAC,QAAQ,CAACH,IAAD,EAAOE,QAAP,CAAR;AACAC,QAAQ,CAACF,GAAD,EAAMC,QAAN,CAAR;AAEA;;;;;;AAKA,SAASC,QAAT,CAAmBC,GAAnB,EAAuC;AAAA,MAAfC,MAAe,uEAAN,IAAM;;AACrC,MAAIA,MAAJ,EAAY;AACV,SAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnB,OAAC,UAACG,GAAD,EAAS;AACR,YAAIA,GAAG,CAACF,MAAJ,KAAe,KAAnB,EAA0B;AACxB,cAAIG,GAAG,GAAGd,OAAV;;AACA,cAAG,CAACc,GAAG,CAACC,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACrBD,YAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACD;;AACDA,UAAAA,GAAG,GAAGA,GAAG,GAAGD,GAAG,CAACC,GAAhB;AACAf,UAAAA,IAAI,CAACiB,IAAL,CAAU,IAAIC,MAAJ,CAAWH,GAAX,CAAV,EAA2BD,GAAG,CAACK,IAA/B,EAAqC,UAACC,IAAD,EAAU;AAC7CA,YAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeA,IAAI,CAACC,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,IAAhB,CAAZ,GAAoC,IAAnD;AACA,mBAAOD,IAAI,CAACC,IAAZ;AACAG,YAAAA,OAAO,CAAChB,GAAR,CAAY,IAAZ;AACAgB,YAAAA,OAAO,CAAChB,GAAR,CAAY,gBAAZ,EAA8B,YAA9B,EAA4CY,IAA5C;AACAI,YAAAA,OAAO,CAAChB,GAAR,CAAY,gBAAZ,EAA8B,YAA9B,EAA4CM,GAAG,CAACW,IAAhD;AACA,mBAAOX,GAAG,CAACW,IAAX;AACD,WAPD;AAQD;AACF,OAhBD,EAgBGd,GAAG,CAACE,GAAD,CAAH,MAAc,EAhBjB;AAiBD;AACF;AACF","sourcesContent":["import Mock from 'mockjs'\r\nimport { baseUrl } from '@/utils/global'\r\nimport * as login from './modules/login'\r\nimport * as user from './modules/user'\r\nimport * as role from './modules/role'\r\nimport * as dept from './modules/dept'\r\nimport * as menu from './modules/menu'\r\nimport * as dict from './modules/dict'\r\nimport * as log from './modules/log'\r\n\r\n// 1. 开启/关闭[所有模块]拦截, 通过调[openMock参数]设置.\r\n// 2. 开启/关闭[业务模块]拦截, 通过调用fnCreate方法[isOpen参数]设置.\r\n// 3. 开启/关闭[业务模块中某个请求]拦截, 通过函数返回对象中的[isOpen属性]设置.\r\n// let openMock = true\r\nlet openMock = true\r\nfnCreate(login, openMock)\r\nfnCreate(user, openMock)\r\nfnCreate(role, openMock)\r\nfnCreate(dept, openMock)\r\nfnCreate(menu, openMock)\r\nfnCreate(dict, openMock)\r\nfnCreate(log, openMock)\r\n\r\n/**\r\n * 创建mock模拟数据\r\n * @param {*} mod 模块\r\n * @param {*} isOpen 是否开启?\r\n */\r\nfunction fnCreate (mod, isOpen = true) {\r\n  if (isOpen) {\r\n    for (var key in mod) {\r\n      ((res) => {\r\n        if (res.isOpen !== false) {\r\n          let url = baseUrl\r\n          if(!url.endsWith(\"/\")) {\r\n            url = url + \"/\"\r\n          }\r\n          url = url + res.url\r\n          Mock.mock(new RegExp(url), res.type, (opts) => {\r\n            opts['data'] = opts.body ? JSON.parse(opts.body) : null\r\n            delete opts.body\r\n            console.log('\\n')\r\n            console.log('%cmock拦截, 请求: ', 'color:blue', opts)\r\n            console.log('%cmock拦截, 响应: ', 'color:blue', res.data)\r\n            return res.data\r\n          })\r\n        }\r\n      })(mod[key]() || {})\r\n    }\r\n  }\r\n}\r\n"]}]}