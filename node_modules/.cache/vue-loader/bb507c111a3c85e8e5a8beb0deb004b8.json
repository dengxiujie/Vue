{"remainingRequest":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ma\\Desktop\\vue\\vue-item\\src\\view\\Login.vue?vue&type=style&index=0&id=ded9d710&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\src\\view\\Login.vue","mtime":1570945552624},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ma\\Desktop\\vue\\vue-item\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .login-container {\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n    -moz-border-radius: 5px;\n    background-clip: padding-box;\n    margin: 100px auto;\n    width: 350px;\n    padding: 35px 35px 15px 35px;\n    background: #fff;\n    border: 1px solid #eaeaea;\n    box-shadow: 0 0 25px #cac6c6;\n    .title {\n      margin: 0px auto 30px auto;\n      text-align: center;\n      color: #505458;\n    }\n    .remember {\n      margin: 0px 0px 35px 0px;\n    }\n  }\n  .lang-selector{\n      width:32px!important;\n      padding:6px;\n     float:right;\n     background:#409Eff\n  }\n  .lang-selector[data-v-0695e340]:hover {\n    background: #409Eff;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/view","sourcesContent":["<template>\n  <el-form :model=\"loginForm\" :rules=\"fieldRules\" ref=\"loginForm\" label-position=\"left\" label-width=\"0px\" class=\"demo-ruleForm login-container\">\n    <span class=\"tool-bar\">\n      <!-- 主题切换 -->\n      <!-- <theme-picker style=\"float:right;\" class=\"theme-picker\" :default=\"themeColor\" @onThemeChange=\"onThemeChange\"></theme-picker> -->\n      <!-- 语言切换 -->\n    <lang-selector class=\"lang-selector\"></lang-selector> \n    </span>\n    <h2 class=\"title\" style=\"padding-left:22px;\" >{{$t('common.SystemLogin')}}</h2>\n    <el-form-item prop=\"account\">\n      <el-input type=\"text\" v-model=\"loginForm.account\" auto-complete=\"off\" :placeholder=\"$t('common.Account')\"></el-input>\n    </el-form-item>\n    <el-form-item prop=\"password\">\n      <el-input type=\"password\" v-model=\"loginForm.password\" auto-complete=\"off\" :placeholder=\"$t('common.Password')\"></el-input>\n    </el-form-item>\n    <el-form-item >\n      <el-col :span=\"12\">\n        <el-form-item prop=\"captcha\">\n          <el-input type=\"test\" v-model=\"loginForm.captcha\" auto-complete=\"off\" :placeholder=\"$t('common.code')\"\n            style=\"width: 100%;\">\n          </el-input>\n        </el-form-item>\n      </el-col>\n      <el-col class=\"line\" :span=\"1\">&nbsp;</el-col>\n      <el-col :span=\"11\">\n        <el-form-item>\n            <img style=\"width: 100%;\" class=\"pointer\" :src=\"loginForm.src\" @click=\"refreshCaptcha\">\n        </el-form-item>\n      </el-col>\n    </el-form-item>\n     <el-checkbox v-model=\"checked\" checked class=\"remember\">{{$t('common.sRemember')}}</el-checkbox>\n    <el-form-item style=\"width:100%;\">\n      <el-button type=\"primary\" style=\"width:48%;\" @click.native.prevent=\"reset\">{{$t('common.Reset')}}</el-button>\n      <el-button type=\"primary\" style=\"width:48%;\" @click.native.prevent=\"login\" :loading=\"loading\">{{$t('common.login')}}</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport mock from \"@/mock/index.js\";\nimport { mapState } from 'vuex'\nimport Cookies from \"js-cookie\"\nimport LangSelector from \"@/components/LangSelector\"\nexport default {\n  name: 'Login',\n  components:{\n    LangSelector\n  },\n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        account: 'admin',\n        password: 'admin',\n        captcha:'',\n        src: ''\n      },\n      fieldRules: {\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n        // ,\n        // captcha: [\n        //   { required: true, message: '请输入验证码', trigger: 'blur' }\n        // ]\n      },\n      checked: true\n    }\n  },\n  methods: {\n    login() {\n      this.loading = true\n      let userInfo = {account:this.loginForm.account, password:this.loginForm.password, captcha:this.loginForm.captcha}\n      this.$axios.login.login(userInfo).then((res) => {\n          if(res.msg != null) {\n            this.$message({\n              message: res.msg,\n              type: 'error'\n            })\n          } else {\n             Cookies.set('token', res.data.token) // 放置token到Cookie\n             sessionStorage.setItem('user', userInfo.account) // 保存用户到本地会话\n            // this.$store.commit('menuRouteLoaded', false) // 要求重新加载导航菜单\n            this.$router.push('/')  // 登录成功，跳转到主页\n          }\n          this.loading = false\n        }).catch((res) => {\n          this.$message({\n          message: res.message,\n          type: 'error'\n          })\n        });\n    },\n    refreshCaptcha: function(){\n      this.loginForm.src = this.global.baseUrl + \"/captcha.jpg?t=\" + new Date().getTime();\n    },\n    reset() {\n      this.$refs.loginForm.resetFields()\n    },\n    // 切换主题\n    onThemeChange: function(themeColor) {\n      this.$store.commit('setThemeColor', themeColor)\n    }\n  },\n  mounted() {\n    this.refreshCaptcha()\n  },\n  computed:{\n    ...mapState({\n      themeColor: state=>state.app.themeColor\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .login-container {\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n    -moz-border-radius: 5px;\n    background-clip: padding-box;\n    margin: 100px auto;\n    width: 350px;\n    padding: 35px 35px 15px 35px;\n    background: #fff;\n    border: 1px solid #eaeaea;\n    box-shadow: 0 0 25px #cac6c6;\n    .title {\n      margin: 0px auto 30px auto;\n      text-align: center;\n      color: #505458;\n    }\n    .remember {\n      margin: 0px 0px 35px 0px;\n    }\n  }\n  .lang-selector{\n      width:32px!important;\n      padding:6px;\n     float:right;\n     background:#409Eff\n  }\n  .lang-selector[data-v-0695e340]:hover {\n    background: #409Eff;\n}\n</style>"]}]}